# -*- coding: utf-8 -*-
"""Study Case (Online Business by Month)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V_9nKwYSG1lmxsvDsNfJMcyXMxZMBbg5

#Online sales business by month

Diberikan sebuah data hasil penjualan berdasarkan tipe produk. Net Quantity menyatakan banyaknya barang yang terjual, jika nilainya negatif artinya terdapat barang yang rusak dan mendapatkan kerugian seharga dengan harga jual barang. Gross Sales menyatakan total harga jual yang diperoleh dari harga satuan barang dikali dengan Net Quantity pada jenis barang tertentu. Discounts menyatakan total potongan harga dari suatu jenis barang. Returns menyatakan pengembalian dana yang dilakukan penjual kepada pembeli dikarenakan beberapa alasan pengembalian barang. Total Net Sales merupakan total harga jual akhir, atau total pendapatan dari suatu jenis barang.

#Defining Questions

1. What would be the trend of Revenue vs Nett Sales month over month and year over year? on which month we have the highest or lowest sales? why? (Data by Month)
2. What's the growth rate of sales? (Data by Month)
3. What product line contributes the most to the sales?
4. The discounted items - has it been effective to the sales increase?
5. Which product has the highest return? what can we do to improve?
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel("/content/Case study A - online sales business (2) by month.xlsx")
print("Shape dataset : ", df.shape)
print('\nLima data teratas')
df.head()
print('\nInformasi dataset')
df.info()
print('\nStatistik deskriptif')
df.describe()

#Missing value
df.isnull().sum()

#Sum of Total Orders per year
Month = pd.DataFrame(df.Month.unique().tolist(), columns=["Month"])
Total_Orders = df["Total Orders"]
TO17 = pd.DataFrame(Total_Orders[:12].tolist(), columns=["2017"])
TO18 = pd.DataFrame(Total_Orders[12:24].tolist(), columns=["2018"])
TO19 = pd.DataFrame(Total_Orders[24:].tolist(), columns=["2019"])
Month["2017"], Month["2018"], Month["2019"] = TO17, TO18, TO19
print("Total Orders")
Month

#Visualisasi Total Orders 
plt.figure(figsize=(13,5))
plt.plot(Month["Month"], Month["2017"], label="2017")
plt.plot(Month["Month"], Month["2018"], label="2018")
plt.plot(Month["Month"], Month["2019"], label="2019")
plt.title("Total Orders 2017-2019", weight="bold", fontsize=15)
plt.ylabel("Total Orders", fontsize=10, weight="bold")
plt.legend()

#Sum of Total Orders per year
Month_Sales = pd.DataFrame(df.Month.unique().tolist(), columns=["Month"])
Net_Sales = df["Net Sales"]
NS17 = pd.DataFrame(Net_Sales[:12].tolist(), columns=["2017"])
NS18 = pd.DataFrame(Net_Sales[12:24].tolist(), columns=["2018"])
NS19 = pd.DataFrame(Net_Sales[24:].tolist(), columns=["2019"])
Month_Sales["2017"], Month_Sales["2018"], Month_Sales["2019"] = NS17, NS18, NS19
print('Net Sales')
Month_Sales



#Growth Net Sales by Year
#2017-2018
GS18 = round((Month_Sales["2018"].sum()-Month_Sales["2017"].sum())/Month_Sales["2017"].sum()*100, 2)
print("Growth Net Sales 2018 :" + str(GS18) +"%")
#2018-2019
GS19 = round((Month_Sales["2019"].sum()-Month_Sales["2018"].sum())/Month_Sales["2018"].sum()*100, 2)
print("Growth Net Sales 2019 :" + str(GS19) +"%")

#Visualisasi Net Sales
plt.figure(figsize=(13,5))
plt.plot(Month_Sales["Month"], Month_Sales["2017"], label="2017")
plt.plot(Month_Sales["Month"], Month_Sales["2018"], label="2018")
plt.plot(Month_Sales["Month"], Month_Sales["2019"], label="2019")
plt.title("Net Sales 2017-2019", weight="bold", fontsize=15)
plt.ylabel("Net Sales", fontsize=10, weight="bold")
plt.legend()
plt.text(0.7,27000,"Net Sales Growth Rate 2018 = "+str(GS18)+" %")
plt.text(0.7,26000,"Net Sales Growth Rate 2019 = "+str(GS19)+" %")

#Dataset baru
Month_new = []
for i in Month_Sales["Month"]:
  Month_new.append(i+" 2017")
for i in Month_Sales["Month"]:
  Month_new.append(i+" 2018")
for i in Month_Sales["Month"]:
  Month_new.append(i+" 2019")
Month_new

df_new = df
df_new = df_new.drop(["Month"], axis=1)
df_new["Year"] = Month_new
df_new = df_new.rename({'Year': 'Time'}, axis=1)
df_new

#Growth Total Sales 
GTS = round((df_new["Total Sales"][35]-df_new["Total Sales"][0])/df_new["Total Sales"][0]*100, 2)
print("Growth Total Sales :" + str(GTS) +"%")

#Visualisasi Total Sales month by month
plt.figure(figsize=(20,5))
plt.plot(df_new["Time"], df_new["Total Sales"])
plt.title("Total Sales 2017-2019", weight="bold", fontsize=15)
plt.ylabel("Total Sales", fontsize=10, weight="bold")
plt.xticks(rotation=45)
plt.text(-1,31000,"Total Sales Growth Rate = "+str(GTS)+" %", fontsize=15)

"""Penjualan sangat meningkat drastis pada akhir tahun 2019, dan puncaknya terjadi pada bulan Desember 2019."""